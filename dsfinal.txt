#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
      75                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
     150                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(487,92)
partial_Driver.VelocityRequest
partial_Driver.combiTimeTable.nout
partial_Driver.combiTimeTable.y[1]
partial_Driver.combiTimeTable.tableOnFile
partial_Driver.combiTimeTable.table[1, 1]
partial_Driver.combiTimeTable.table[1, 2]
partial_Driver.combiTimeTable.table[2, 1]
partial_Driver.combiTimeTable.table[2, 2]
partial_Driver.combiTimeTable.table[3, 1]
partial_Driver.combiTimeTable.table[3, 2]
partial_Driver.combiTimeTable.table[4, 1]
partial_Driver.combiTimeTable.table[4, 2]
partial_Driver.combiTimeTable.table[5, 1]
partial_Driver.combiTimeTable.table[5, 2]
partial_Driver.combiTimeTable.table[6, 1]
partial_Driver.combiTimeTable.table[6, 2]
partial_Driver.combiTimeTable.verboseRead
partial_Driver.combiTimeTable.columns[1]
partial_Driver.combiTimeTable.smoothness
partial_Driver.combiTimeTable.extrapolation
partial_Driver.combiTimeTable.timeScale
partial_Driver.combiTimeTable.offset[1]
partial_Driver.combiTimeTable.startTime
partial_Driver.combiTimeTable.shiftTime
partial_Driver.combiTimeTable.timeEvents
partial_Driver.combiTimeTable.verboseExtrapolation
partial_Driver.combiTimeTable.t_min
partial_Driver.combiTimeTable.t_max
partial_Driver.combiTimeTable.t_minScaled
partial_Driver.combiTimeTable.t_maxScaled
partial_Driver.combiTimeTable.p_offset[1]
partial_Driver.combiTimeTable.tableID.id
partial_Driver.combiTimeTable.nextTimeEvent
partial_Driver.combiTimeTable.nextTimeEventScaled
partial_Driver.combiTimeTable.timeScaled
partial_Driver.gain.k
partial_Driver.k
partial_Controller.MechanicalBrakeRequest
partial_Controller.brakeAllowance
partial_Controller.limiter.uMax
partial_Controller.limiter.uMin
partial_Controller.limiter.strict
partial_Controller.limiter.homotopyType
partial_Controller.limiter.limitsAtInit
partial_Brakes.flange_a.tau
partial_Brakes.flange_b.tau
partial_Brakes.brake.useSupport
partial_Brakes.brake.flange_a.tau
partial_Brakes.brake.flange_b.tau
partial_Brakes.brake.phi_support
partial_Brakes.brake.mue_pos[1, 1]
partial_Brakes.brake.mue_pos[1, 2]
partial_Brakes.brake.peak
partial_Brakes.brake.cgeo
partial_Brakes.brake.fn_max
partial_Brakes.brake.w_small
partial_Brakes.brake.tau0
partial_Brakes.brake.tau0_max
partial_Brakes.brake.free
partial_Brakes.brake.sa
partial_Brakes.brake.startForward
partial_Brakes.brake.startBackward
partial_Brakes.brake.locked
partial_Brakes.brake.Unknown
partial_Brakes.brake.Free
partial_Brakes.brake.Forward
partial_Brakes.brake.Stuck
partial_Brakes.brake.Backward
partial_Brakes.brake.mode
partial_Brakes.brake.unitAngularAcceleration
partial_Brakes.brake.unitTorque
partial_Brakes.brake.useHeatPort
partial_Brakes.brake.lossPower
partial_Brakes.brake.phi
partial_Brakes.brake.mue0
partial_Brakes.brake.fn
partial_Brakes.brake.f_normalized
partial_Brakes.limiter.uMax
partial_Brakes.limiter.uMin
partial_Brakes.limiter.strict
partial_Brakes.limiter.homotopyType
partial_Brakes.limiter.limitsAtInit
partial_Chassis.idealRollingWheel.useSupportR
partial_Chassis.idealRollingWheel.useSupportT
partial_Chassis.idealRollingWheel.flangeR.tau
partial_Chassis.idealRollingWheel.flangeT.s
partial_Chassis.idealRollingWheel.flangeT.f
partial_Chassis.idealRollingWheel.fixedR.phi0
partial_Chassis.idealRollingWheel.fixedT.s0
partial_Chassis.idealRollingWheel.radius
partial_Chassis.speedSensor.flange.s
partial_Chassis.speedSensor.flange.f
partial_Chassis.inertia.flange_b.tau
partial_Chassis.inertia.J
partial_Chassis.inertia.stateSelect
partial_Chassis.inertia.w
partial_Chassis.mass.m
partial_Chassis.mass.stateSelect
partial_Chassis.mass.s
partial_Chassis.mass.L
partial_Chassis.mass.flange_b.f
partial_Chassis.mass.v
partial_Chassis.mass.der(v)
partial_Chassis.fixed.phi0
partial_Chassis.fixed.flange.tau
partial_Chassis.damper.phi_rel
partial_Chassis.damper.der(phi_rel)
partial_Chassis.damper.w_rel
partial_Chassis.damper.der(w_rel)
partial_Chassis.damper.phi_nominal
partial_Chassis.damper.stateSelect
partial_Chassis.damper.d
partial_Chassis.damper.useHeatPort
partial_Chassis.damper.lossPower
simplePower.pin_p.i
simplePower.pin_n.v
simplePower.pin_n.i
simplePower.driveMotorPowerSensor2.pv.i
simplePower.driveMotorPowerSensor2.nv.v
simplePower.driveMotorPowerSensor2.nv.i
simplePower.driveMotorPowerSensor2.power
simplePower.driveMotorPowerSensor2.voltageSensor.p.i
simplePower.driveMotorPowerSensor2.voltageSensor.n.v
simplePower.driveMotorPowerSensor2.voltageSensor.n.i
simplePower.constantVoltage.V
simplePower.constantVoltage.n.v
simplePower.ground.p.v
simplePower.ground.p.i
partial_PMSM.tauMaxTraction
partial_PMSM.PMaxTraction
partial_PMSM.tauMaxRegen
partial_PMSM.PMaxRegen
partial_PMSM.Ti
partial_PMSM.k
partial_PMSM.eTraction.useSupport
partial_PMSM.eTraction.useThermalPort
partial_PMSM.eTraction.flange.tau
partial_PMSM.eTraction.pin_n.v
partial_PMSM.eTraction.desiredSpeed
partial_PMSM.eTraction.controller.setTorque
partial_PMSM.eTraction.controller.data.k
partial_PMSM.eTraction.controller.data.Ti
partial_PMSM.eTraction.controller.data.tau_max
partial_PMSM.eTraction.controller.coreElement.k
partial_PMSM.eTraction.controller.coreElement.Ti
partial_PMSM.eTraction.controller.coreElement.yMax
partial_PMSM.eTraction.controller.coreElement.PID.controlError
partial_PMSM.eTraction.controller.coreElement.PID.controllerType
partial_PMSM.eTraction.controller.coreElement.PID.k
partial_PMSM.eTraction.controller.coreElement.PID.Ti
partial_PMSM.eTraction.controller.coreElement.PID.Td
partial_PMSM.eTraction.controller.coreElement.PID.yMax
partial_PMSM.eTraction.controller.coreElement.PID.yMin
partial_PMSM.eTraction.controller.coreElement.PID.wp
partial_PMSM.eTraction.controller.coreElement.PID.wd
partial_PMSM.eTraction.controller.coreElement.PID.Ni
partial_PMSM.eTraction.controller.coreElement.PID.Nd
partial_PMSM.eTraction.controller.coreElement.PID.withFeedForward
partial_PMSM.eTraction.controller.coreElement.PID.kFF
partial_PMSM.eTraction.controller.coreElement.PID.initType
partial_PMSM.eTraction.controller.coreElement.PID.xi_start
partial_PMSM.eTraction.controller.coreElement.PID.xd_start
partial_PMSM.eTraction.controller.coreElement.PID.y_start
partial_PMSM.eTraction.controller.coreElement.PID.homotopyType
partial_PMSM.eTraction.controller.coreElement.PID.strict
partial_PMSM.eTraction.controller.coreElement.PID.limitsAtInit
partial_PMSM.eTraction.controller.coreElement.PID.unitTime
partial_PMSM.eTraction.controller.coreElement.PID.addP.y
partial_PMSM.eTraction.controller.coreElement.PID.addP.k1
partial_PMSM.eTraction.controller.coreElement.PID.addP.k2
partial_PMSM.eTraction.controller.coreElement.PID.P.k
partial_PMSM.eTraction.controller.coreElement.PID.P.y
partial_PMSM.eTraction.controller.coreElement.PID.gainPID.k
partial_PMSM.eTraction.controller.coreElement.PID.gainPID.u
partial_PMSM.eTraction.controller.coreElement.PID.gainPID.y
partial_PMSM.eTraction.controller.coreElement.PID.addPID.k1
partial_PMSM.eTraction.controller.coreElement.PID.addPID.k2
partial_PMSM.eTraction.controller.coreElement.PID.addPID.k3
partial_PMSM.eTraction.controller.coreElement.PID.limiter.uMax
partial_PMSM.eTraction.controller.coreElement.PID.limiter.uMin
partial_PMSM.eTraction.controller.coreElement.PID.limiter.strict
partial_PMSM.eTraction.controller.coreElement.PID.limiter.homotopyType
partial_PMSM.eTraction.controller.coreElement.PID.limiter.limitsAtInit
partial_PMSM.eTraction.controller.coreElement.PID.limiter.u
partial_PMSM.eTraction.controller.coreElement.PID.with_I
partial_PMSM.eTraction.controller.coreElement.PID.with_D
partial_PMSM.eTraction.controller.coreElement.PID.Dzero.k
partial_PMSM.eTraction.controller.coreElement.PID.FFzero.k
partial_PMSM.eTraction.controller.coreElement.PID.addFF.k1
partial_PMSM.eTraction.controller.coreElement.PID.addFF.k2
partial_PMSM.eTraction.inverter.useThermalPort
partial_PMSM.eTraction.inverter.n1.v
partial_PMSM.eTraction.inverter.p2.i
partial_PMSM.eTraction.inverter.n2.v
partial_PMSM.eTraction.inverter.inputVoltageSensor1.p.i
partial_PMSM.eTraction.inverter.inputVoltageSensor1.n.v
partial_PMSM.eTraction.inverter.inputVoltageSensor1.n.i
partial_PMSM.eTraction.inverter.product1.y
partial_PMSM.eTraction.inverter.inputVoltageSensor2.p.i
partial_PMSM.eTraction.inverter.inputVoltageSensor2.n.v
partial_PMSM.eTraction.inverter.inputVoltageSensor2.n.i
partial_PMSM.eTraction.inverter.product2.y
partial_PMSM.eTraction.inverter.useVoltageGuess
partial_PMSM.eTraction.inverter.V_guess
partial_PMSM.eTraction.inverter.data.eta
partial_PMSM.eTraction.inverter.data.variablePower
partial_PMSM.eTraction.inverter.data.P_constant
partial_PMSM.eTraction.inverter.data.V_min
partial_PMSM.eTraction.inverter.data.V_max
partial_PMSM.eTraction.inverter.data.I_max
partial_PMSM.eTraction.inverter.data.actionLim
partial_PMSM.eTraction.inverter.data.actionDiv0
partial_PMSM.eTraction.inverter.data.V_eps
partial_PMSM.eTraction.inverter.data.useDynamics
partial_PMSM.eTraction.inverter.data.T_PT1
partial_PMSM.eTraction.inverter.data.initType
partial_PMSM.eTraction.inverter.data.initialCurrent
partial_PMSM.eTraction.inverter.coreElement.eta
partial_PMSM.eTraction.inverter.coreElement.variablePower
partial_PMSM.eTraction.inverter.coreElement.P_constant
partial_PMSM.eTraction.inverter.coreElement.V_min
partial_PMSM.eTraction.inverter.coreElement.V_max
partial_PMSM.eTraction.inverter.coreElement.I_max
partial_PMSM.eTraction.inverter.coreElement.actionLim
partial_PMSM.eTraction.inverter.coreElement.actionDiv0
partial_PMSM.eTraction.inverter.coreElement.V_eps
partial_PMSM.eTraction.inverter.coreElement.useDynamics
partial_PMSM.eTraction.inverter.coreElement.T_PT1
partial_PMSM.eTraction.inverter.coreElement.initType
partial_PMSM.eTraction.inverter.coreElement.initialCurrent
partial_PMSM.eTraction.inverter.coreElement.useVoltageGuess
partial_PMSM.eTraction.inverter.coreElement.V_guess
partial_PMSM.eTraction.inverter.coreElement.lossPower.P_actual
partial_PMSM.eTraction.inverter.coreElement.lossPower.i
partial_PMSM.eTraction.inverter.coreElement.lossPower.i_limit
partial_PMSM.eTraction.inverter.coreElement.lossPower.i_des
partial_PMSM.eTraction.inverter.coreElement.lossPower.n.v
partial_PMSM.eTraction.inverter.coreElement.lossPower.variablePower
partial_PMSM.eTraction.inverter.coreElement.lossPower.P_constant
partial_PMSM.eTraction.inverter.coreElement.lossPower.V_min
partial_PMSM.eTraction.inverter.coreElement.lossPower.V_max
partial_PMSM.eTraction.inverter.coreElement.lossPower.I_max
partial_PMSM.eTraction.inverter.coreElement.lossPower.actionLim
partial_PMSM.eTraction.inverter.coreElement.lossPower.actionDiv0
partial_PMSM.eTraction.inverter.coreElement.lossPower.V_eps
partial_PMSM.eTraction.inverter.coreElement.lossPower.useDynamics
partial_PMSM.eTraction.inverter.coreElement.lossPower.T_PT1
partial_PMSM.eTraction.inverter.coreElement.lossPower.initType
partial_PMSM.eTraction.inverter.coreElement.lossPower.initialCurrent
partial_PMSM.eTraction.inverter.coreElement.lossPower.useVoltageGuess
partial_PMSM.eTraction.inverter.coreElement.lossPower.V_guess
partial_PMSM.eTraction.inverter.coreElement.lossPower.divNoZero.eps
partial_PMSM.eTraction.inverter.coreElement.lossPower.divNoZero.considerSign
partial_PMSM.eTraction.inverter.coreElement.lossPower.divNoZero.action
partial_PMSM.eTraction.inverter.coreElement.lossPower.signalCurrent.n.v
partial_PMSM.eTraction.inverter.coreElement.lossPower.desiredPower.variableOutput
partial_PMSM.eTraction.inverter.coreElement.lossPower.desiredPower.p
partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.strict
partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.homotopyType
partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.ySimplified
partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.limit1
partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.limit2
partial_PMSM.eTraction.inverter.coreElement.lossPower.positiveVoltage.y
partial_PMSM.eTraction.inverter.coreElement.lossPower.positiveVoltage.generateEvent
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.y
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.u1
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.u2
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.y1
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.y2
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.y
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.u1
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.u2
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.y1
partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.y2
partial_PMSM.eTraction.inverter.coreElement.lossPower.voltageSensor.p.i
partial_PMSM.eTraction.inverter.coreElement.lossPower.voltageSensor.n.v
partial_PMSM.eTraction.inverter.coreElement.lossPower.voltageSensor.n.i
partial_PMSM.eTraction.inverter.coreElement.providedPower.y
partial_PMSM.eTraction.inverter.coreElement.losses.k
partial_PMSM.eTraction.inverter.coreElement.losses.y
partial_PMSM.eTraction.inverter.coreElement.computePowerDC.k1
partial_PMSM.eTraction.inverter.coreElement.computePowerDC.k2
partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.pv.i
partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.nv.v
partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.nv.i
partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.voltageSensor.p.i
partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.voltageSensor.n.v
partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.voltageSensor.n.i
partial_PMSM.eTraction.inverter.coreElement.n1.v
partial_PMSM.eTraction.inverter.coreElement.n2.v
partial_PMSM.eTraction.inverter.coreElement.P_AC
partial_PMSM.eTraction.inverter.coreElement.P_DC
partial_PMSM.eTraction.inverter.gain.k
partial_PMSM.eTraction.inverter.gain.u
partial_PMSM.eTraction.inverter.gain.y
partial_PMSM.eTraction.inverter.addAbs.u1_absActive
partial_PMSM.eTraction.inverter.addAbs.u2_absActive
partial_PMSM.eTraction.inverter.addAbs.y_absActive
partial_PMSM.eTraction.inverter.addAbs.k1
partial_PMSM.eTraction.inverter.addAbs.k2
partial_PMSM.eTraction.inverter.addAbs.add.u1
partial_PMSM.eTraction.inverter.addAbs.add.u2
partial_PMSM.eTraction.inverter.addAbs.add.y
partial_PMSM.eTraction.inverter.addAbs.add.k1
partial_PMSM.eTraction.inverter.addAbs.add.k2
partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u1.absActive
partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u1.abs.generateEvent
partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u2.absActive
partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u2.abs.generateEvent
partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_y.absActive
partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_y.abs.generateEvent
partial_PMSM.eTraction.machine.useSupport
partial_PMSM.eTraction.machine.useThermalPort
partial_PMSM.eTraction.machine.pin_n.v
partial_PMSM.eTraction.machine.electricPowerDC.pv.i
partial_PMSM.eTraction.machine.electricPowerDC.nv.v
partial_PMSM.eTraction.machine.electricPowerDC.nv.i
partial_PMSM.eTraction.machine.electricPowerDC.power
partial_PMSM.eTraction.machine.electricPowerDC.voltageSensor.p.i
partial_PMSM.eTraction.machine.electricPowerDC.voltageSensor.n.v
partial_PMSM.eTraction.machine.electricPowerDC.voltageSensor.n.i
partial_PMSM.eTraction.machine.toBus_minAvailableTorque.u
partial_PMSM.eTraction.machine.toBus_innerTorque.u
partial_PMSM.eTraction.machine.toBus_mechanicPower.u
partial_PMSM.eTraction.machine.fixed.phi0
partial_PMSM.eTraction.machine.fixed.flange.tau
partial_PMSM.eTraction.machine.internalSupport.tau
partial_PMSM.eTraction.machine.angleSensor.flange_a.tau
partial_PMSM.eTraction.machine.angleSensor.flange_b.tau
partial_PMSM.eTraction.machine.angleSensor.phi_rel
partial_PMSM.eTraction.machine.speedSensor.flange_a.tau
partial_PMSM.eTraction.machine.speedSensor.flange_b.tau
partial_PMSM.eTraction.machine.speedSensor.phi_rel
partial_PMSM.eTraction.machine.useVoltageGuess
partial_PMSM.eTraction.machine.V_guess
partial_PMSM.eTraction.machine.data.J_r
partial_PMSM.eTraction.machine.data.enableFirstOrder
partial_PMSM.eTraction.machine.data.T
partial_PMSM.eTraction.machine.data.enableTorqueLimitation
partial_PMSM.eTraction.machine.data.P_max
partial_PMSM.eTraction.machine.data.tau_max
partial_PMSM.eTraction.machine.data.useSupport
partial_PMSM.eTraction.machine.data.useThermalPort
partial_PMSM.eTraction.machine.data.eta
partial_PMSM.eTraction.machine.data.variablePower
partial_PMSM.eTraction.machine.data.P_constant
partial_PMSM.eTraction.machine.data.V_min
partial_PMSM.eTraction.machine.data.V_max
partial_PMSM.eTraction.machine.data.I_max
partial_PMSM.eTraction.machine.data.actionLim
partial_PMSM.eTraction.machine.data.actionDiv0
partial_PMSM.eTraction.machine.data.V_eps
partial_PMSM.eTraction.machine.data.useDynamics
partial_PMSM.eTraction.machine.data.T_PT1
partial_PMSM.eTraction.machine.data.initType
partial_PMSM.eTraction.machine.data.initialCurrent
partial_PMSM.eTraction.machine.coreElement.J_r
partial_PMSM.eTraction.machine.coreElement.enableFirstOrder
partial_PMSM.eTraction.machine.coreElement.T
partial_PMSM.eTraction.machine.coreElement.enableTorqueLimitation
partial_PMSM.eTraction.machine.coreElement.P_max
partial_PMSM.eTraction.machine.coreElement.tau_max
partial_PMSM.eTraction.machine.coreElement.useSupport
partial_PMSM.eTraction.machine.coreElement.useThermalPort
partial_PMSM.eTraction.machine.coreElement.eta
partial_PMSM.eTraction.machine.coreElement.variablePower
partial_PMSM.eTraction.machine.coreElement.P_constant
partial_PMSM.eTraction.machine.coreElement.V_min
partial_PMSM.eTraction.machine.coreElement.V_max
partial_PMSM.eTraction.machine.coreElement.I_max
partial_PMSM.eTraction.machine.coreElement.actionLim
partial_PMSM.eTraction.machine.coreElement.actionDiv0
partial_PMSM.eTraction.machine.coreElement.V_eps
partial_PMSM.eTraction.machine.coreElement.useDynamics
partial_PMSM.eTraction.machine.coreElement.T_PT1
partial_PMSM.eTraction.machine.coreElement.initType
partial_PMSM.eTraction.machine.coreElement.initialCurrent
partial_PMSM.eTraction.machine.coreElement.useVoltageGuess
partial_PMSM.eTraction.machine.coreElement.V_guess
partial_PMSM.eTraction.machine.coreElement.pin_n.v
partial_PMSM.eTraction.machine.coreElement.P_el
partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.enableTorqueLimitation
partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.P_max
partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.tau_max
partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.characteristicSpeed
partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.actualTorque
partial_PMSM.eTraction.machine.coreElement.torque.useSupport
partial_PMSM.eTraction.machine.coreElement.torque.phi_support
partial_PMSM.eTraction.machine.coreElement.rotorInertia.J
partial_PMSM.eTraction.machine.coreElement.rotorInertia.stateSelect
partial_PMSM.eTraction.machine.coreElement.multiSensor.power
partial_PMSM.eTraction.machine.coreElement.signChange.k
partial_PMSM.eTraction.machine.coreElement.fixed.phi0
partial_PMSM.eTraction.machine.coreElement.fixed.flange.tau
partial_PMSM.eTraction.machine.coreElement.relSpeedSensor.flange_a.tau
partial_PMSM.eTraction.machine.coreElement.relSpeedSensor.flange_b.tau
partial_PMSM.eTraction.machine.coreElement.relSpeedSensor.phi_rel
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.P_actual
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.i_limit
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.i_des
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.n.v
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.variablePower
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.P_constant
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_min
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_max
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.I_max
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.actionLim
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.actionDiv0
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_eps
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.useDynamics
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.T_PT1
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.initType
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.initialCurrent
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.useVoltageGuess
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_guess
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.divNoZero.eps
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.divNoZero.considerSign
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.divNoZero.action
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.signalCurrent.n.v
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.desiredPower.variableOutput
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.desiredPower.p
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.strict
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.homotopyType
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.ySimplified
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.limit1
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.limit2
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.positiveVoltage.y
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.positiveVoltage.generateEvent
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.y
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.u1
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.u2
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.y1
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.y2
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.y
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.u1
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.u2
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.y1
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.y2
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.voltageSensor.p.i
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.voltageSensor.n.v
partial_PMSM.eTraction.machine.coreElement.electricPowerSource.voltageSensor.n.i
partial_PMSM.eTraction.machine.coreElement.internalSupport.tau
partial_PMSM.eTraction.machine.coreElement.compute_P_el.eta
partial_PMSM.eTraction.machine.coreElement.compute_P_el.resultingPower.u2
partial_PMSM.eTraction.machine.coreElement.compute_P_el.resultingPower.k1
partial_PMSM.eTraction.machine.coreElement.compute_P_el.resultingPower.k2
partial_PMSM.eTraction.machine.coreElement.compute_P_el.losses.k
partial_PMSM.eTraction.machine.coreElement.compute_P_el.losses.u
partial_PMSM.eTraction.speedSensor.flange.tau
partial_PMSM.multiSensor.power
partial_PMSM.motorSwitch.feedback
partial_PMSM.motorSwitch.regenReference
partial_PMSM.eTractionPowerSensor.pv.i
partial_PMSM.eTractionPowerSensor.nv.v
partial_PMSM.eTractionPowerSensor.nv.i
partial_PMSM.eTractionPowerSensor.power
partial_PMSM.eTractionPowerSensor.voltageSensor.p.i
partial_PMSM.eTractionPowerSensor.voltageSensor.n.v
partial_PMSM.eTractionPowerSensor.voltageSensor.n.i
partial_PMSM.pin_n.v
partial_PMSM.inertia.J
partial_PMSM.inertia.stateSelect
partial_PMSM.feedback.y
partial_PMSM.negative.sign1.y
partial_PMSM.negative.sign1.generateEvent
partial_PMSM.negative.add.y
partial_PMSM.negative.add.k1
partial_PMSM.negative.add.k2
partial_PMSM.negative.const.k
partial_PMSM.eTraction.controller.coreElement.PID.I.k
partial_PMSM.eTraction.controller.coreElement.PID.I.use_reset
partial_PMSM.eTraction.controller.coreElement.PID.I.use_set
partial_PMSM.eTraction.controller.coreElement.PID.I.initType
partial_PMSM.eTraction.controller.coreElement.PID.I.y_start
partial_PMSM.eTraction.controller.coreElement.PID.I.u
partial_PMSM.eTraction.controller.coreElement.PID.I.y
partial_PMSM.eTraction.controller.coreElement.PID.I.der(y)
partial_PMSM.eTraction.controller.coreElement.PID.I.local_reset
partial_PMSM.eTraction.controller.coreElement.PID.I.local_set
partial_PMSM.eTraction.controller.coreElement.PID.addI.k1
partial_PMSM.eTraction.controller.coreElement.PID.addI.k2
partial_PMSM.eTraction.controller.coreElement.PID.addI.k3
partial_PMSM.eTraction.controller.coreElement.PID.addI.u3
partial_PMSM.eTraction.controller.coreElement.PID.addSat.y
partial_PMSM.eTraction.controller.coreElement.PID.addSat.k1
partial_PMSM.eTraction.controller.coreElement.PID.addSat.k2
partial_PMSM.eTraction.controller.coreElement.PID.gainTrack.k

double initialValue(487,6)
 -2       0                       0                       0                
  6   256   # partial_Driver.VelocityRequest
 -2       1                       1                 1.0000000000000000E+100
  6   258   # partial_Driver.combiTimeTable.nout
 -2       0                       0                       0                
  6   256   # partial_Driver.combiTimeTable.y[1]
 -2       0                       0                       0                
  6   257   # partial_Driver.combiTimeTable.tableOnFile
 -1       0                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[1, 1]
 -1       0                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[1, 2]
 -1      20                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[2, 1]
 -1      50                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[2, 2]
 -1      30                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[3, 1]
 -1      50                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[3, 2]
 -1      50                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[4, 1]
 -1      20                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[4, 2]
 -1      51                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[5, 1]
 -1       0                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[5, 2]
 -1     100                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[6, 1]
 -1       0                       0                       0                
  1   280   # partial_Driver.combiTimeTable.table[6, 2]
 -1       1                       0                       0                
  1   281   # partial_Driver.combiTimeTable.verboseRead
 -2       2                       0                       0                
  6   258   # partial_Driver.combiTimeTable.columns[1]
 -2       1                       1                       5                
  6   258   # partial_Driver.combiTimeTable.smoothness
 -2       2                       1                       4                
  6   258   # partial_Driver.combiTimeTable.extrapolation
 -2       1                  1.0000000000000001E-15 1.0000000000000000E+100
  6   256   # partial_Driver.combiTimeTable.timeScale
 -1       0                       0                       0                
  1   280   # partial_Driver.combiTimeTable.offset[1]
 -1       0                       0                       0                
  1   280   # partial_Driver.combiTimeTable.startTime
 -2       0                       0                       0                
  6   256   # partial_Driver.combiTimeTable.shiftTime
 -1       1                       1                       3                
  1   282   # partial_Driver.combiTimeTable.timeEvents
 -2       0                       0                       0                
  6   257   # partial_Driver.combiTimeTable.verboseExtrapolation
 -2       0                       0                       0                
  6   256   # partial_Driver.combiTimeTable.t_min
 -2     100                       0                       0                
  6   256   # partial_Driver.combiTimeTable.t_max
 -2       0                       0                       0                
  6   256   # partial_Driver.combiTimeTable.t_minScaled
 -2     100                       0                       0                
  6   256   # partial_Driver.combiTimeTable.t_maxScaled
 -2       0                       0                       0                
  6  1280   # partial_Driver.combiTimeTable.p_offset[1]
 -2       0                       0                       0                
  6  1282   # partial_Driver.combiTimeTable.tableID.id
 -2     100                       0                       0                
  6  1352   # partial_Driver.combiTimeTable.nextTimeEvent
 -2     100                       0                       0                
  6  1352   # partial_Driver.combiTimeTable.nextTimeEventScaled
 -2      75                       0                       0                
  6  1280   # partial_Driver.combiTimeTable.timeScaled
 -1  5.0000000000000000E-01       0                       0                
  1   280   # partial_Driver.gain.k
 -1       0                       0                       0                
  1   280   # partial_Driver.k
 -2  4.9650077127678573E-03       0                       0                
  6   256   # partial_Controller.MechanicalBrakeRequest
 -2  4.9650077127678573E-03       0                       0                
  6   256   # partial_Controller.brakeAllowance
 -1       1                       0                       0                
  1   280   # partial_Controller.limiter.uMax
 -2      -1                       0                       0                
  6   256   # partial_Controller.limiter.uMin
 -2       0                       0                       0                
  6   257   # partial_Controller.limiter.strict
 -2       2                       1                       4                
  6   258   # partial_Controller.limiter.homotopyType
 -2       1                       0                       0                
  6   257   # partial_Controller.limiter.limitsAtInit
 -2  4.9699729087199724E+00       0                       0                
  6   388   # partial_Brakes.flange_a.tau
 -2 -4.9651959521153088E-03       0                       0                
  6   388   # partial_Brakes.flange_b.tau
 -2       0                       0                       0                
  6   769   # partial_Brakes.brake.useSupport
 -2  4.9650077127678571E+00       0                       0                
  6   388   # partial_Brakes.brake.flange_a.tau
 -2       0                       0                       0                
  6   388   # partial_Brakes.brake.flange_b.tau
 -2       0                       0                       0                
  6  1280   # partial_Brakes.brake.phi_support
 -1       0                       0                       0                
  1   280   # partial_Brakes.brake.mue_pos[1, 1]
 -1  5.0000000000000000E-01       0                       0                
  1   280   # partial_Brakes.brake.mue_pos[1, 2]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # partial_Brakes.brake.peak
 -1       1                       0                 1.0000000000000000E+100
  1   280   # partial_Brakes.brake.cgeo
 -1    2000                       0                 1.0000000000000000E+100
  1   280   # partial_Brakes.brake.fn_max
 -1  1.0000000000000000E+10       0                       0                
  1   280   # partial_Brakes.brake.w_small
 -2  4.9650077127678571E+00       0                       0                
  6   256   # partial_Brakes.brake.tau0
 -2  4.9650077127678571E+00       0                       0                
  6   256   # partial_Brakes.brake.tau0_max
 -2       0                       0                       0                
  6   321   # partial_Brakes.brake.free
 -2  4.9650077138097242E+00       0                       0                
  6   256   # partial_Brakes.brake.sa
 -2       0                       0                       0                
  6   361   # partial_Brakes.brake.startForward
 -2       0                       0                       0                
  6   361   # partial_Brakes.brake.startBackward
 -2       0                       0                       0                
  6   353   # partial_Brakes.brake.locked
 -2       3                       0                       0                
  6   258   # partial_Brakes.brake.Unknown
 -2       2                       0                       0                
  6   258   # partial_Brakes.brake.Free
 -2       1                       0                       0                
  6   258   # partial_Brakes.brake.Forward
 -2       0                       0                       0                
  6   258   # partial_Brakes.brake.Stuck
 -2      -1                       0                       0                
  6   258   # partial_Brakes.brake.Backward
 -2       1                      -1                       3                
  6   330   # partial_Brakes.brake.mode
 -2       1                       0                       0                
  6   768   # partial_Brakes.brake.unitAngularAcceleration
 -2       1                       0                       0                
  6   768   # partial_Brakes.brake.unitTorque
 -2       0                       0                       0                
  6   769   # partial_Brakes.brake.useHeatPort
 -2  2.4651301587844308E-02       0                       0                
  6   256   # partial_Brakes.brake.lossPower
 -2  8.6187066369920342E+02       0                       0                
  6   256   # partial_Brakes.brake.phi
 -2  5.0000000000000000E-01       0                       0                
  6   256   # partial_Brakes.brake.mue0
 -2  9.9300154255357143E+00       0                       0                
  6   256   # partial_Brakes.brake.fn
 -2  4.9650077127678573E-03       0                       0                
  6   256   # partial_Brakes.brake.f_normalized
 -1       1                       0                       0                
  1   280   # partial_Brakes.limiter.uMax
 -1       0                       0                       0                
  1   280   # partial_Brakes.limiter.uMin
 -2       0                       0                       0                
  6   257   # partial_Brakes.limiter.strict
 -2       2                       1                       4                
  6   258   # partial_Brakes.limiter.homotopyType
 -2       1                       0                       0                
  6   257   # partial_Brakes.limiter.limitsAtInit
 -2       0                       0                       0                
  6   769   # partial_Chassis.idealRollingWheel.useSupportR
 -2       0                       0                       0                
  6   769   # partial_Chassis.idealRollingWheel.useSupportT
 -2  1.8753608720112336E-07       0                       0                
  6   388   # partial_Chassis.idealRollingWheel.flangeR.tau
 -2  2.5856119910976099E+02       0                       0                
  6   260   # partial_Chassis.idealRollingWheel.flangeT.s
 -2 -6.2512022225291720E-07       0                       0                
  6   388   # partial_Chassis.idealRollingWheel.flangeT.f
 -1       0                       0                       0                
  1  1304   # partial_Chassis.idealRollingWheel.fixedR.phi0
 -1       0                       0                       0                
  1  1304   # partial_Chassis.idealRollingWheel.fixedT.s0
 -1  2.9999999999999999E-01       0                 1.0000000000000000E+100
  1   280   # partial_Chassis.idealRollingWheel.radius
 -2  2.5856119910976099E+02       0                       0                
  6   260   # partial_Chassis.speedSensor.flange.s
 -2       0                       0                       0                
  6   388   # partial_Chassis.speedSensor.flange.f
 -2 -4.9651952488550585E-03       0                       0                
  6   388   # partial_Chassis.inertia.flange_b.tau
 -1  6.7500000000000004E-01       0                 1.0000000000000000E+100
  1   280   # partial_Chassis.inertia.J
 -2       3                       1                       5                
  6   770   # partial_Chassis.inertia.stateSelect
 -2  4.9650077127678573E-03       0                       0                
  6   264   # partial_Chassis.inertia.w
 -1    2000                       0                 1.0000000000000000E+100
  1   280   # partial_Chassis.mass.m
 -2       3                       1                       5                
  6   258   # partial_Chassis.mass.stateSelect
 -2  2.5856119910976099E+02       0                       0                
  6   256   # partial_Chassis.mass.s
 -1       0                       0                       0                
  1   280   # partial_Chassis.mass.L
 -2       0                       0                       0                
  6   388   # partial_Chassis.mass.flange_b.f
 -2  1.4895023138303571E-03       0                       0                
  6   256   # partial_Chassis.mass.v
 -2  3.1256011112645862E-10       0                       0                
  6   256   # partial_Chassis.mass.der(v)
 -1       0                       0                       0                
  1   280   # partial_Chassis.fixed.phi0
 -2  4.9650077127678573E-03       0                       0                
  6   388   # partial_Chassis.fixed.flange.tau
 -2  8.6187066369920342E+02       0                       0                
  2   280   # partial_Chassis.damper.phi_rel
 -2  4.9650077127678573E-03       0                       0                
  3   256   # partial_Chassis.damper.der(phi_rel)
 -2  4.9650077127678573E-03       0                       0                
  2   272   # partial_Chassis.damper.w_rel
 -2  1.0418670370881955E-09       0                       0                
  3   256   # partial_Chassis.damper.der(w_rel)
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # partial_Chassis.damper.phi_nominal
 -2       4                       1                       5                
  6   770   # partial_Chassis.damper.stateSelect
 -1       1                       0                 1.0000000000000000E+100
  1   280   # partial_Chassis.damper.d
 -2       0                       0                       0                
  6   769   # partial_Chassis.damper.useHeatPort
 -2  2.4651301587844309E-05       0                       0                
  6   256   # partial_Chassis.damper.lossPower
 -2 -6.6691767119966822E-05       0                       0                
  6   388   # simplePower.pin_p.i
 -2       0                       0                       0                
  6   260   # simplePower.pin_n.v
 -2  6.6691767119966822E-05       0                       0                
  6   388   # simplePower.pin_n.i
 -2       0                       0                       0                
  6   388   # simplePower.driveMotorPowerSensor2.pv.i
 -2       0                       0                       0                
  6   260   # simplePower.driveMotorPowerSensor2.nv.v
 -2       0                       0                       0                
  6   388   # simplePower.driveMotorPowerSensor2.nv.i
 -2  2.4675953834387723E-02       0                       0                
  6   256   # simplePower.driveMotorPowerSensor2.power
 -2       0                       0                       0                
  6   388   # simplePower.driveMotorPowerSensor2.voltageSensor.p.i
 -2       0                       0                       0                
  6   260   # simplePower.driveMotorPowerSensor2.voltageSensor.n.v
 -2       0                       0                       0                
  6   388   # simplePower.driveMotorPowerSensor2.voltageSensor.n.i
 -1     370                       0                       0                
  1   280   # simplePower.constantVoltage.V
 -2       0                       0                       0                
  6   260   # simplePower.constantVoltage.n.v
 -2       0                       0                       0                
  6   260   # simplePower.ground.p.v
 -2       0                       0                       0                
  6   388   # simplePower.ground.p.i
 -1  100000                       0                       0                
  1   280   # partial_PMSM.tauMaxTraction
 -1  100000                       0                       0                
  1   280   # partial_PMSM.PMaxTraction
 -1     500                       0                       0                
  1   280   # partial_PMSM.tauMaxRegen
 -1     500                       0                       0                
  1   280   # partial_PMSM.PMaxRegen
 -1    1000                       0                       0                
  1   280   # partial_PMSM.Ti
 -1   10000                       0                       0                
  1   280   # partial_PMSM.k
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.useSupport
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.useThermalPort
 -2 -4.9699729097618395E+00       0                       0                
  6   388   # partial_PMSM.eTraction.flange.tau
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.pin_n.v
 -2  4.9650077127678573E-03       0                       0                
  6   256   # partial_PMSM.eTraction.desiredSpeed
 -2  4.9699729108037065E+00       0                       0                
  6   256   # partial_PMSM.eTraction.controller.setTorque
 -2   10000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.data.k
 -2    1000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.data.Ti
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.data.tau_max
 -2   10000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.k
 -2    1000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.Ti
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.yMax
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.controlError
 -2       2                       1                       4                
  6   258   # partial_PMSM.eTraction.controller.coreElement.PID.controllerType
 -2   10000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.k
 -2    1000                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.Ti
 -1  1.0000000000000001E-01       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.Td
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.yMax
 -2 -100000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.wd
 -1  9.0000000000000002E-01  1.0000000000000000E-13 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.Ni
 -1      10                  1.0000000000000000E-13 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.Nd
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.controller.coreElement.PID.withFeedForward
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.kFF
 -2       5                       1                       5                
  6   258   # partial_PMSM.eTraction.controller.coreElement.PID.initType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.xi_start
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.xd_start
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.y_start
 -2       2                       1                       4                
  6   258   # partial_PMSM.eTraction.controller.coreElement.PID.homotopyType
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.controller.coreElement.PID.strict
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.controller.coreElement.PID.limitsAtInit
 -2       1                       0                       0                
  6   768   # partial_PMSM.eTraction.controller.coreElement.PID.unitTime
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.addP.y
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.addP.k1
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addP.k2
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.P.k
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.P.y
 -2   10000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.gainPID.k
 -2  4.9699729108037063E-04       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.gainPID.u
 -2  4.9699729108037065E+00       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.gainPID.y
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addPID.k1
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addPID.k2
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addPID.k3
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.limiter.uMax
 -2 -100000                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.limiter.uMin
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.controller.coreElement.PID.limiter.strict
 -2       2                       1                       4                
  6   258   # partial_PMSM.eTraction.controller.coreElement.PID.limiter.homotopyType
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.controller.coreElement.PID.limiter.limitsAtInit
 -2  4.9699729108037065E+00       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.limiter.u
 -2       1                       0                       0                
  6   769   # partial_PMSM.eTraction.controller.coreElement.PID.with_I
 -2       0                       0                       0                
  6   769   # partial_PMSM.eTraction.controller.coreElement.PID.with_D
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.Dzero.k
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.FFzero.k
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addFF.k1
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.addFF.k2
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.useThermalPort
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.n1.v
 -2 -6.6691767119966822E-05       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.p2.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.n2.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.inputVoltageSensor1.p.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.inputVoltageSensor1.n.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.inputVoltageSensor1.n.i
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.product1.y
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.inputVoltageSensor2.p.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.inputVoltageSensor2.n.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.inputVoltageSensor2.n.i
 -2 -2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.product2.y
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.useVoltageGuess
 -1     400                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.V_guess
 -1       1                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.inverter.data.eta
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.data.variablePower
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.data.P_constant
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.data.V_min
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.data.V_max
 -1  100000                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.inverter.data.I_max
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.data.actionLim
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.data.actionDiv0
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.data.V_eps
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.data.useDynamics
 -1  1.0000000000000000E-03       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.data.T_PT1
 -1       1                       1                       4                
  1   282   # partial_PMSM.eTraction.inverter.data.initType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.data.initialCurrent
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.eta
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.variablePower
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.P_constant
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.V_min
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.V_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.I_max
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.actionLim
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.actionDiv0
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.V_eps
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.useDynamics
 -1  1.0000000000000000E-03       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.T_PT1
 -1       1                       1                       4                
  1   282   # partial_PMSM.eTraction.inverter.coreElement.initType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.initialCurrent
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.useVoltageGuess
 -2     400                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.V_guess
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.P_actual
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.i
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.i_limit
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.i_des
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.coreElement.lossPower.n.v
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.variablePower
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.P_constant
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.V_min
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.V_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.I_max
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.lossPower.actionLim
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.lossPower.actionDiv0
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.V_eps
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.useDynamics
 -2  1.0000000000000000E-03       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.T_PT1
 -2       1                       1                       4                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.lossPower.initType
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.initialCurrent
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.useVoltageGuess
 -2     400                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.V_guess
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.divNoZero.eps
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.divNoZero.considerSign
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.lossPower.divNoZero.action
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.coreElement.lossPower.signalCurrent.n.v
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.desiredPower.variableOutput
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.desiredPower.p
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.strict
 -2       2                       1                       3                
  6   258   # partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.homotopyType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.ySimplified
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.limit1
 -2 -100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.currentLimiter.limit2
 -2     370                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.positiveVoltage.y
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.coreElement.lossPower.positiveVoltage.generateEvent
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.y
 -2  5.0000000000000000E-01       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.u1
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.u2
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.y1
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_minV.y2
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.y
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.u1
 -2  1.1000000000000001E+05       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.u2
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.y1
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.lossPower.limI_maxV.y2
 -2       0                       0                       0                
  6  1412   # partial_PMSM.eTraction.inverter.coreElement.lossPower.voltageSensor.p.i
 -2       0                       0                       0                
  6  1284   # partial_PMSM.eTraction.inverter.coreElement.lossPower.voltageSensor.n.v
 -2       0                       0                       0                
  6  1412   # partial_PMSM.eTraction.inverter.coreElement.lossPower.voltageSensor.n.i
 -2 -2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.providedPower.y
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.losses.k
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.losses.y
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.computePowerDC.k1
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.coreElement.computePowerDC.k2
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.pv.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.nv.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.nv.i
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.voltageSensor.p.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.voltageSensor.n.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.inverter.coreElement.powerSensorAC.voltageSensor.n.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.coreElement.n1.v
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.inverter.coreElement.n2.v
 -2 -2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.coreElement.P_AC
 -2  2.4675953834387723E-02       0                       0                
  6   288   # partial_PMSM.eTraction.inverter.coreElement.P_DC
 -1  5.0000000000000000E-01       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.gain.k
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.gain.u
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.gain.y
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.u1_absActive
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.u2_absActive
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.y_absActive
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.addAbs.k1
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.inverter.addAbs.k2
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.addAbs.add.u1
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.addAbs.add.u2
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.addAbs.add.y
 -2      -1                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.addAbs.add.k1
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.inverter.addAbs.add.k2
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u1.absActive
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u1.abs.generateEvent
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u2.absActive
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_u2.abs.generateEvent
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_y.absActive
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.inverter.addAbs.conditionalAbs_y.abs.generateEvent
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.useSupport
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.useThermalPort
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.machine.pin_n.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.electricPowerDC.pv.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.machine.electricPowerDC.nv.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.electricPowerDC.nv.i
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.electricPowerDC.power
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.electricPowerDC.voltageSensor.p.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.machine.electricPowerDC.voltageSensor.n.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.electricPowerDC.voltageSensor.n.i
 -2 -100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.toBus_minAvailableTorque.u
 -2  4.9699729108037065E+00       0                       0                
  6   256   # partial_PMSM.eTraction.machine.toBus_innerTorque.u
 -2 -2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.toBus_mechanicPower.u
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.fixed.phi0
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.fixed.flange.tau
 -2       0                       0                       0                
  6  1412   # partial_PMSM.eTraction.machine.internalSupport.tau
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.angleSensor.flange_a.tau
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.angleSensor.flange_b.tau
 -2  8.6187066369920342E+02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.angleSensor.phi_rel
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.speedSensor.flange_a.tau
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.speedSensor.flange_b.tau
 -2  8.6187066369920342E+02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.speedSensor.phi_rel
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.useVoltageGuess
 -1     400                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.V_guess
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.data.J_r
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.data.enableFirstOrder
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.data.T
 -1       1                       0                       0                
  1   281   # partial_PMSM.eTraction.machine.data.enableTorqueLimitation
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.data.P_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.data.tau_max
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.data.useSupport
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.data.useThermalPort
 -1       1                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.machine.data.eta
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.data.variablePower
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.data.P_constant
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.data.V_min
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.data.V_max
 -1  100000                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.eTraction.machine.data.I_max
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.data.actionLim
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.data.actionDiv0
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.data.V_eps
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.data.useDynamics
 -1  1.0000000000000000E-03       0                       0                
  1   280   # partial_PMSM.eTraction.machine.data.T_PT1
 -1       1                       1                       4                
  1   282   # partial_PMSM.eTraction.machine.data.initType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.data.initialCurrent
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.J_r
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.enableFirstOrder
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.T
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.enableTorqueLimitation
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.P_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.tau_max
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.useSupport
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.useThermalPort
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.eta
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.variablePower
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.P_constant
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.V_min
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.V_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.I_max
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.coreElement.actionLim
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.coreElement.actionDiv0
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.V_eps
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.useDynamics
 -1  1.0000000000000000E-03       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.T_PT1
 -1       1                       1                       4                
  1   282   # partial_PMSM.eTraction.machine.coreElement.initType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.initialCurrent
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.useVoltageGuess
 -2     400                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.V_guess
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.machine.coreElement.pin_n.v
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.P_el
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.enableTorqueLimitation
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.P_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.tau_max
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.characteristicSpeed
 -2  4.9699729108037065E+00       0                 1.0000000000000000E+100
  6  1280   # partial_PMSM.eTraction.machine.coreElement.limitDesiredTorque.actualTorque
 -2       0                       0                       0                
  6   769   # partial_PMSM.eTraction.machine.coreElement.torque.useSupport
 -2       0                       0                       0                
  6  1280   # partial_PMSM.eTraction.machine.coreElement.torque.phi_support
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.rotorInertia.J
 -2       3                       1                       5                
  6   770   # partial_PMSM.eTraction.machine.coreElement.rotorInertia.stateSelect
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.multiSensor.power
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.signChange.k
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.fixed.phi0
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.coreElement.fixed.flange.tau
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.coreElement.relSpeedSensor.flange_a.tau
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.machine.coreElement.relSpeedSensor.flange_b.tau
 -2  8.6187066369920342E+02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.relSpeedSensor.phi_rel
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.P_actual
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.i_limit
 -2  6.6691767119966822E-05       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.i_des
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.n.v
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.variablePower
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.P_constant
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_min
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_max
 -2  100000                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.I_max
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.actionLim
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.actionDiv0
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_eps
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.useDynamics
 -2  1.0000000000000000E-03       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.T_PT1
 -2       1                       1                       4                
  6   258   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.initType
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.initialCurrent
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.useVoltageGuess
 -2     400                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.V_guess
 -2  1.0000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.divNoZero.eps
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.divNoZero.considerSign
 -2       3                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.divNoZero.action
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.signalCurrent.n.v
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.desiredPower.variableOutput
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.desiredPower.p
 -2       1                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.strict
 -2       2                       1                       3                
  6   258   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.homotopyType
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.ySimplified
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.limit1
 -2 -100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.currentLimiter.limit2
 -2     370                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.positiveVoltage.y
 -2       0                       0                       0                
  6   257   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.positiveVoltage.generateEvent
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.y
 -2  5.0000000000000000E-01       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.u1
 -2       1                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.u2
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.y1
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_minV.y2
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.y
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.u1
 -2  1.1000000000000001E+05       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.u2
 -2  100000                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.y1
 -1       0                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.limI_maxV.y2
 -2       0                       0                       0                
  6  1412   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.voltageSensor.p.i
 -2       0                       0                       0                
  6  1284   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.voltageSensor.n.v
 -2       0                       0                       0                
  6  1412   # partial_PMSM.eTraction.machine.coreElement.electricPowerSource.voltageSensor.n.i
 -2       0                       0                       0                
  6  1412   # partial_PMSM.eTraction.machine.coreElement.internalSupport.tau
 -2       1                       0                 1.0000000000000000E+100
  6   256   # partial_PMSM.eTraction.machine.coreElement.compute_P_el.eta
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.compute_P_el.resultingPower.u2
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.compute_P_el.resultingPower.k1
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.machine.coreElement.compute_P_el.resultingPower.k2
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.machine.coreElement.compute_P_el.losses.k
 -2 -2.4675953834387723E-02       0                       0                
  6   288   # partial_PMSM.eTraction.machine.coreElement.compute_P_el.losses.u
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTraction.speedSensor.flange.tau
 -2  2.4675953829214843E-02       0                       0                
  6   256   # partial_PMSM.multiSensor.power
 -2 -4.9650077127678573E-03       0                       0                
  6   256   # partial_PMSM.motorSwitch.feedback
 -2       0                       0                       0                
  6   256   # partial_PMSM.motorSwitch.regenReference
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTractionPowerSensor.pv.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTractionPowerSensor.nv.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTractionPowerSensor.nv.i
 -2  2.4675953834387723E-02       0                       0                
  6   256   # partial_PMSM.eTractionPowerSensor.power
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTractionPowerSensor.voltageSensor.p.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.eTractionPowerSensor.voltageSensor.n.v
 -2       0                       0                       0                
  6   388   # partial_PMSM.eTractionPowerSensor.voltageSensor.n.i
 -2       0                       0                       0                
  6   260   # partial_PMSM.pin_n.v
 -1       1                       0                 1.0000000000000000E+100
  1   280   # partial_PMSM.inertia.J
 -2       3                       1                       5                
  6   770   # partial_PMSM.inertia.stateSelect
 -2 -4.9650077127678573E-03       0                       0                
  6   256   # partial_PMSM.feedback.y
 -2      -1                       0                       0                
  6   256   # partial_PMSM.negative.sign1.y
 -2       0                       0                       0                
  6   257   # partial_PMSM.negative.sign1.generateEvent
 -2      -1                       0                       0                
  6   256   # partial_PMSM.negative.add.y
 -1       1                       0                       0                
  1   280   # partial_PMSM.negative.add.k1
 -1  5.0000000000000000E-01       0                       0                
  1   280   # partial_PMSM.negative.add.k2
 -1 -5.0000000000000000E-01       0                       0                
  1   280   # partial_PMSM.negative.const.k
 -2  1.0000000000000000E-03       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.I.k
 -2       0                       0                       0                
  6   769   # partial_PMSM.eTraction.controller.coreElement.PID.I.use_reset
 -2       0                       0                       0                
  6   769   # partial_PMSM.eTraction.controller.coreElement.PID.I.use_set
 -2       3                       1                       4                
  6   258   # partial_PMSM.eTraction.controller.coreElement.PID.I.initType
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.I.y_start
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.I.u
 -2  4.9699729108037063E-04       0                       0                
  2   272   # partial_PMSM.eTraction.controller.coreElement.PID.I.y
 -2       0                       0                       0                
  3   256   # partial_PMSM.eTraction.controller.coreElement.PID.I.der(y)
 -2       0                       0                       0                
  6   769   # partial_PMSM.eTraction.controller.coreElement.PID.I.local_reset
 -2       0                       0                       0                
  6   768   # partial_PMSM.eTraction.controller.coreElement.PID.I.local_set
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addI.k1
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addI.k2
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addI.k3
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.addI.u3
 -2       0                       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.addSat.y
 -1       1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addSat.k1
 -1      -1                       0                       0                
  1   280   # partial_PMSM.eTraction.controller.coreElement.PID.addSat.k2
 -2  1.1111111111111112E-04       0                       0                
  6   256   # partial_PMSM.eTraction.controller.coreElement.PID.gainTrack.k


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(487,152)
[rad/s]
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
Table matrix (time = first column; e.g., table=[0, 0; 1, 1; 2, 4])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Time scale of first table column [s]
Offsets of output signals
Output = offset for time < startTime [s]
Shift time of first table column [s]
Time event handling of table interpolation [:#(type=Modelica.Blocks.Types.TimeEvents)]
= true, if warning messages are to be printed if time is outside the table definition range [:#(type=Boolean)]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table [1]
Maximum (scaled) abscissa value defined in table [1]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant [1]
Scaled time [1]
Gain value multiplied with input signal [1]
Constant output value


Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
[w,mue] positive sliding friction coefficient (w_rel>=0)
[w,mue] positive sliding friction coefficient (w_rel>=0)
Peak for maximum value of mue at w==0 (mue0_max = peak*mue_pos[1,2]) [1]
Geometry constant containing friction distribution assumption
Maximum normal force [N]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
=true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Angle between shaft flanges (flange_a, flange_b) and support [rad|deg]
Friction coefficient for w=0 and forward sliding
Normal force (=fn_max*f_normalized) [N]
Normalized force signal 0..1 (normal force = fn_max*f_normalized; brake is active if > 0) [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
= true, if rotational support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
= true, if translational support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute position of flange [m]
Cut force directed into flange [N]
Fixed offset angle of housing [rad|deg]
Fixed offset position of housing [m]
Wheel radius [m]
Absolute position of flange [m]
Cut force directed into flange [N]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
Mass of the sliding mass [kg]
Priority to use s and v as states [:#(type=StateSelect)]
Absolute position of center of component (s = flange_a.s + L/2 = flange_b.s - L/2) [m]
Length of component, from left flange to right flange (= flange_b.s - flange_a.s) [m]
Cut force directed into flange [N]
Absolute velocity of component [m/s]
der(Absolute velocity of component) [m/s2]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Relative rotation angle (= flange_b.phi - flange_a.phi) [rad|deg]
der(Relative rotation angle (= flange_b.phi - flange_a.phi)) [rad/s]
Relative angular velocity (= der(phi_rel)) [rad/s]
der(Relative angular velocity (= der(phi_rel))) [rad/s2]
Nominal value of phi_rel (used for scaling) [rad|rad]
Priority to use phi_rel and w_rel as states [:#(type=StateSelect)]
Damping constant [N.m.s/rad]
=true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Instantaneous power as output signal [W]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Value of constant voltage [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
[N.m]
[W]
[N.m]
[W]
[s]
[1]
True: stator is able to rotate, false: stator is fixed internally [:#(type=Boolean)]
True: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Cut torque in the flange [N.m]
Potential at the pin [V]
[rad/s|1/min]
[N.m]
Gain of controller [1]
Time constant of Integrator block [s]
Maximum allowed torque that is output to the machine [N.m]
Gain of controller [1]
Time constant of Integrator block [s]
Upper limit of output [N.m]
Control error (set point - measurement) [rad/s]
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller [1]
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output [N.m]
Lower limit of output [N.m]
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Use feed-forward input? [:#(type=Boolean)]
Gain of feed-forward input
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
[s]
Connector of Real output signal
Gain of input signal 1
Gain of input signal 2
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Input signal connector
Output signal connector
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Upper limits of input signals [N.m]
Lower limits of input signals [N.m]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real input signal [N.m]
[:#(type=Boolean)]
[:#(type=Boolean)]
Constant output value
Constant output value
Gain of input signal 1
Gain of input signal 2
True: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Connector of Real output signal [W]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Connector of Real output signal [W]
Use start value for iteration during initialization (setting 'start' with 'fixed=false') [:#(type=Boolean)]
Start value for iteration during initialization [V]
[1]
Set power by parameter (true) or real input (false) [:#(type=Boolean)]
Desired power: postive is consumed, negative is generated [W]
For lower voltages, power will be limited [V]
For higher voltages, power will be limited [V]
Maximum possible DC current (-I_max < I < I_max) [A]
Optionally warn or stop when power is limited [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Optionally warn or stop when preventing divisions by zero [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Threshold for minimum voltage, values between +eps/-eps will be treated as eps [V]
Use PT1 dynamics to filter the load's demanded power [:#(type=Boolean)]
Time constant of optional PT1 [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial current through the power source [A]
Efficiency of the inverter [1]
Set power by parameter (true) or real input (false) [:#(type=Boolean)]
Desired power: postive is consumed, negative is generated [W]
For lower voltages, power will be limited [V]
For higher voltages, power will be limited [V]
Maximum possible DC current (-I_max < I < I_max) [A]
Optionally warn or stop when power is limited [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Optionally warn or stop when preventing divisions by zero [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Threshold for minimum voltage, values between +eps/-eps will be treated as eps [V]
Use PT1 dynamics to filter the load's demanded power [:#(type=Boolean)]
Time constant of optional PT1 [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial current through the power source [A]
Use start value for iteration during initialization (setting 'start' with 'fixed=false') [:#(type=Boolean)]
Start value for iteration during initialization [V]
Instantaneous power [W]
Current through the load [A]
Instantaneous current limit [A]
Instantaneous current limit [A]
Potential at the pin [V]
Set power by parameter (true) or real input (false) [:#(type=Boolean)]
Desired power: postive is consumed, negative is generated [W]
For lower voltages, power will be limited [V]
For higher voltages, power will be limited [V]
Maximum possible DC current (-I_max < I < I_max) [A]
Optionally warn or stop when power is limited [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Optionally warn or stop when preventing divisions by zero [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Threshold for minimum voltage, values between +eps/-eps will be treated as eps [V]
Use PT1 dynamics to filter the load's demanded power [:#(type=Boolean)]
Time constant of optional PT1 [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial current through the power source [A]
Use start value for iteration during initialization (setting 'start' with 'fixed=false') [:#(type=Boolean)]
Start value for iteration during initialization [V]
Smallest value used for division [V]
True: sign is considered in case of 'b' < 'eps' [:#(type=Boolean)]
Optionally inform about divisions by zero with asserts [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Potential at the pin [V]
If true the input signal u is used as output, otherwise the parameter p [:#(type=Boolean)]
Constant output value [W]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.VariableLimiterHomotopy)]
Fixed value of output in simplified model [A]
Upper limit [A]
Lower limit [A]
Connector of Real output signal [V]
Choose whether events shall be generated [:#(type=Boolean)]
Connector of Real output signal [A]
Lower boundary of input u, switching from constant value y1 to sin^2 interpolation [V]
Upper boundary of input u, switching from sin^2 interpolation to constant value y2 [V]
Minimum value for y [A]
Maximum value for y [A]
Connector of Real output signal [A]
Lower boundary of input u, switching from constant value y1 to sin^2 interpolation [V]
Upper boundary of input u, switching from sin^2 interpolation to constant value y2 [V]
Minimum value for y [A]
Maximum value for y [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Connector of Real output signal [W]
Gain value multiplied with input signal [1]
Output signal connector [W]
Gain of input signal 1 [1]
Gain of input signal 2 [1]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
[W]
[W]
Gain value multiplied with input signal [1]
Input signal connector [W]
Output signal connector [W]
Apply abs on u1 [:#(type=Boolean)]
Apply abs on u2 [:#(type=Boolean)]
Apply abs on y [:#(type=Boolean)]
Gain of upper input u1 [1]
Gain of lower input u2 [1]
Connector of Real input signal 1 [W]
Connector of Real input signal 2 [W]
Connector of Real output signal [W]
Gain of input signal 1 [1]
Gain of input signal 2 [1]
If true, then y = abs(u), if not y = u [:#(type=Boolean)]
Choose whether events shall be generated [:#(type=Boolean)]
If true, then y = abs(u), if not y = u [:#(type=Boolean)]
Choose whether events shall be generated [:#(type=Boolean)]
If true, then y = abs(u), if not y = u [:#(type=Boolean)]
Choose whether events shall be generated [:#(type=Boolean)]
true: stator is able to rotate, false: stator is fixed internally [:#(type=Boolean)]
true: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Instantaneous power as output signal [W]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current min available torque [N.m]
Electrical torque inside the machine [N.m]
Mechanic power at the machine's shaft [W]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Relative angle between two flanges (= flange_b.phi - flange_a.phi) as output signal [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Relative angle between two flanges (flange_b.phi - flange_a.phi) [rad|deg]
Use start value for iteration during initialization (setting 'start' with 'fixed=false') [:#(type=Boolean)]
Start value for iteration during initialization [V]
Ineratia of the machine's rotor [kg.m2]
Use a first order element to approximate the behaviour of the stator current and hence the inner torque [:#(type=Boolean)]
Time constant of the first order element [s]
false: Torque limits will be set to inf [:#(type=Boolean)]
Maximium power provided by the machine (above nominal speed) [W]
Maximum torque provided by the machine (up to nominal speed) [N.m]
true: stator is able to rotate, false: stator is fixed internally [:#(type=Boolean)]
true: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Total efficiency [1]
Set power by parameter (true) or real input (false) [:#(type=Boolean)]
Desired power: postive is consumed, negative is generated [W]
For lower voltages, power will be limited [V]
For higher voltages, power will be limited [V]
Maximum possible DC current (-I_max < I < I_max) [A]
Optionally warn or stop when power is limited [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Optionally warn or stop when preventing divisions by zero [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Threshold for minimum voltage, values between +eps/-eps will be treated as eps [V]
Use PT1 dynamics to filter the load's demanded power [:#(type=Boolean)]
Time constant of optional PT1 [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial current through the power source [A]
Ineratia of the machine's rotor [kg.m2]
Use a first order element to approximate the behaviour of the stator current and hence the inner torque [:#(type=Boolean)]
Time constant of the first order element [s]
false: Torque limits will be set to inf [:#(type=Boolean)]
Maximium power provided by the machine (above nominal speed) [W]
Maximum torque provided by the machine (up to nominal speed) [N.m]
true: stator is able to rotate, false: stator is fixed internally [:#(type=Boolean)]
true: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Total efficiency [1]
Set power by parameter (true) or real input (false) [:#(type=Boolean)]
Desired power: postive is consumed, negative is generated [W]
For lower voltages, power will be limited [V]
For higher voltages, power will be limited [V]
Maximum possible DC current (-I_max < I < I_max) [A]
Optionally warn or stop when power is limited [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Optionally warn or stop when preventing divisions by zero [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Threshold for minimum voltage, values between +eps/-eps will be treated as eps [V]
Use PT1 dynamics to filter the load's demanded power [:#(type=Boolean)]
Time constant of optional PT1 [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial current through the power source [A]
Use start value for iteration during initialization (setting 'start' with 'fixed=false') [:#(type=Boolean)]
Start value for iteration during initialization [V]
Potential at the pin [V]
Electric power of drive as output signal [W]
false: Torque limits will be set to inf [:#(type=Boolean)]
Maximium power provided by the machine (above nominal speed) [W]
Maximum torque provided by the machine (up to nominal speed) [N.m]
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Power in flange flange_a as output signal [W]
Gain value multiplied with input signal [1]
Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Relative angle between two flanges (flange_b.phi - flange_a.phi) [rad|deg]
Instantaneous power [W]
Instantaneous current limit [A]
Instantaneous current limit [A]
Potential at the pin [V]
Set power by parameter (true) or real input (false) [:#(type=Boolean)]
Desired power: postive is consumed, negative is generated [W]
For lower voltages, power will be limited [V]
For higher voltages, power will be limited [V]
Maximum possible DC current (-I_max < I < I_max) [A]
Optionally warn or stop when power is limited [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Optionally warn or stop when preventing divisions by zero [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Threshold for minimum voltage, values between +eps/-eps will be treated as eps [V]
Use PT1 dynamics to filter the load's demanded power [:#(type=Boolean)]
Time constant of optional PT1 [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial current through the power source [A]
Use start value for iteration during initialization (setting 'start' with 'fixed=false') [:#(type=Boolean)]
Start value for iteration during initialization [V]
Smallest value used for division [V]
True: sign is considered in case of 'b' < 'eps' [:#(type=Boolean)]
Optionally inform about divisions by zero with asserts [:#(type=DymolaModels.Blocks.Choices.AssertActions)]
Potential at the pin [V]
If true the input signal u is used as output, otherwise the parameter p [:#(type=Boolean)]
Constant output value [W]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.VariableLimiterHomotopy)]
Fixed value of output in simplified model [A]
Upper limit [A]
Lower limit [A]
Connector of Real output signal [V]
Choose whether events shall be generated [:#(type=Boolean)]
Connector of Real output signal [A]
Lower boundary of input u, switching from constant value y1 to sin^2 interpolation [V]
Upper boundary of input u, switching from sin^2 interpolation to constant value y2 [V]
Minimum value for y [A]
Maximum value for y [A]
Connector of Real output signal [A]
Lower boundary of input u, switching from constant value y1 to sin^2 interpolation [V]
Upper boundary of input u, switching from sin^2 interpolation to constant value y2 [V]
Minimum value for y [A]
Maximum value for y [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Cut torque in the flange [N.m]
Efficiency [1]
Connector of Real input signal 2 [W]
Gain of input signal 1 [1]
Gain of input signal 2 [1]
Gain value multiplied with input signal [1]
Input signal connector [W]
Cut torque in the flange [N.m]
Power in flange flange_a as output signal [W]
[rad/s]
[rad/s]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Instantaneous power as output signal [W]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
[rad/s]
Connector of Real output signal
Choose whether events shall be generated [:#(type=Boolean)]
Connector of Real output signal
Gain of input signal 1
Gain of input signal 2
Constant output value
Integrator gain [1]
=true, if reset port enabled [:#(type=Boolean)]
=true, if set port enabled and used as reinitialization value when reset [:#(type=Boolean)]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Connector of Real input signal
Connector of Real output signal
der(Connector of Real output signal)
[:#(type=Boolean)]

Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 3
Connector of Real output signal
Gain of input signal 1
Gain of input signal 2
Gain value multiplied with input signal [1]

